// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// HintedHandoffMetricsNotStoredHintsByAddrGetReader is a Reader for the HintedHandoffMetricsNotStoredHintsByAddrGet structure.
type HintedHandoffMetricsNotStoredHintsByAddrGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HintedHandoffMetricsNotStoredHintsByAddrGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHintedHandoffMetricsNotStoredHintsByAddrGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHintedHandoffMetricsNotStoredHintsByAddrGetOK creates a HintedHandoffMetricsNotStoredHintsByAddrGetOK with default headers values
func NewHintedHandoffMetricsNotStoredHintsByAddrGetOK() *HintedHandoffMetricsNotStoredHintsByAddrGetOK {
	return &HintedHandoffMetricsNotStoredHintsByAddrGetOK{}
}

/*HintedHandoffMetricsNotStoredHintsByAddrGetOK handles this case with default header values.

HintedHandoffMetricsNotStoredHintsByAddrGetOK hinted handoff metrics not stored hints by addr get o k
*/
type HintedHandoffMetricsNotStoredHintsByAddrGetOK struct {
	Payload int32
}

func (o *HintedHandoffMetricsNotStoredHintsByAddrGetOK) Error() string {
	return fmt.Sprintf("[GET /hinted_handoff/metrics/not_stored_hints/{addr}][%d] hintedHandoffMetricsNotStoredHintsByAddrGetOK  %+v", 200, o.Payload)
}

func (o *HintedHandoffMetricsNotStoredHintsByAddrGetOK) GetPayload() int32 {
	return o.Payload
}

func (o *HintedHandoffMetricsNotStoredHintsByAddrGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
