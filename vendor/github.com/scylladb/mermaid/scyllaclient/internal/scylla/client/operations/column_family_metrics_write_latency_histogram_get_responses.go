// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/mermaid/scyllaclient/internal/scylla/models"
)

// ColumnFamilyMetricsWriteLatencyHistogramGetReader is a Reader for the ColumnFamilyMetricsWriteLatencyHistogramGet structure.
type ColumnFamilyMetricsWriteLatencyHistogramGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ColumnFamilyMetricsWriteLatencyHistogramGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewColumnFamilyMetricsWriteLatencyHistogramGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewColumnFamilyMetricsWriteLatencyHistogramGetOK creates a ColumnFamilyMetricsWriteLatencyHistogramGetOK with default headers values
func NewColumnFamilyMetricsWriteLatencyHistogramGetOK() *ColumnFamilyMetricsWriteLatencyHistogramGetOK {
	return &ColumnFamilyMetricsWriteLatencyHistogramGetOK{}
}

/*ColumnFamilyMetricsWriteLatencyHistogramGetOK handles this case with default header values.

ColumnFamilyMetricsWriteLatencyHistogramGetOK column family metrics write latency histogram get o k
*/
type ColumnFamilyMetricsWriteLatencyHistogramGetOK struct {
	Payload []*models.Histogram
}

func (o *ColumnFamilyMetricsWriteLatencyHistogramGetOK) Error() string {
	return fmt.Sprintf("[GET /column_family/metrics/write_latency/histogram/][%d] columnFamilyMetricsWriteLatencyHistogramGetOK  %+v", 200, o.Payload)
}

func (o *ColumnFamilyMetricsWriteLatencyHistogramGetOK) GetPayload() []*models.Histogram {
	return o.Payload
}

func (o *ColumnFamilyMetricsWriteLatencyHistogramGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
