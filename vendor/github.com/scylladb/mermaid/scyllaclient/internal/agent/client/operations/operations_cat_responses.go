// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/mermaid/scyllaclient/internal/agent/models"
)

// OperationsCatReader is a Reader for the OperationsCat structure.
type OperationsCatReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperationsCatReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOperationsCatOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOperationsCatNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOperationsCatInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOperationsCatOK creates a OperationsCatOK with default headers values
func NewOperationsCatOK() *OperationsCatOK {
	return &OperationsCatOK{}
}

/*OperationsCatOK handles this case with default header values.

File system details
*/
type OperationsCatOK struct {
	Payload *models.Content
}

func (o *OperationsCatOK) Error() string {
	return fmt.Sprintf("[POST /rclone/operations/cat][%d] operationsCatOK  %+v", 200, o.Payload)
}

func (o *OperationsCatOK) GetPayload() *models.Content {
	return o.Payload
}

func (o *OperationsCatOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Content)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperationsCatNotFound creates a OperationsCatNotFound with default headers values
func NewOperationsCatNotFound() *OperationsCatNotFound {
	return &OperationsCatNotFound{}
}

/*OperationsCatNotFound handles this case with default header values.

Not found
*/
type OperationsCatNotFound struct {
	Payload *models.ErrorResponse
}

func (o *OperationsCatNotFound) Error() string {
	return fmt.Sprintf("[POST /rclone/operations/cat][%d] operationsCatNotFound  %+v", 404, o.Payload)
}

func (o *OperationsCatNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *OperationsCatNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperationsCatInternalServerError creates a OperationsCatInternalServerError with default headers values
func NewOperationsCatInternalServerError() *OperationsCatInternalServerError {
	return &OperationsCatInternalServerError{}
}

/*OperationsCatInternalServerError handles this case with default header values.

Server error
*/
type OperationsCatInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *OperationsCatInternalServerError) Error() string {
	return fmt.Sprintf("[POST /rclone/operations/cat][%d] operationsCatInternalServerError  %+v", 500, o.Payload)
}

func (o *OperationsCatInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *OperationsCatInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
