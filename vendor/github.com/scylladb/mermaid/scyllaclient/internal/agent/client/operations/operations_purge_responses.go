// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/mermaid/scyllaclient/internal/agent/models"
)

// OperationsPurgeReader is a Reader for the OperationsPurge structure.
type OperationsPurgeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OperationsPurgeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOperationsPurgeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewOperationsPurgeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewOperationsPurgeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewOperationsPurgeOK creates a OperationsPurgeOK with default headers values
func NewOperationsPurgeOK() *OperationsPurgeOK {
	return &OperationsPurgeOK{}
}

/*OperationsPurgeOK handles this case with default header values.

Job ID
*/
type OperationsPurgeOK struct {
	Payload *models.Jobid
}

func (o *OperationsPurgeOK) Error() string {
	return fmt.Sprintf("[POST /rclone/operations/purge][%d] operationsPurgeOK  %+v", 200, o.Payload)
}

func (o *OperationsPurgeOK) GetPayload() *models.Jobid {
	return o.Payload
}

func (o *OperationsPurgeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Jobid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperationsPurgeNotFound creates a OperationsPurgeNotFound with default headers values
func NewOperationsPurgeNotFound() *OperationsPurgeNotFound {
	return &OperationsPurgeNotFound{}
}

/*OperationsPurgeNotFound handles this case with default header values.

Not found
*/
type OperationsPurgeNotFound struct {
	Payload *models.ErrorResponse
}

func (o *OperationsPurgeNotFound) Error() string {
	return fmt.Sprintf("[POST /rclone/operations/purge][%d] operationsPurgeNotFound  %+v", 404, o.Payload)
}

func (o *OperationsPurgeNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *OperationsPurgeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOperationsPurgeInternalServerError creates a OperationsPurgeInternalServerError with default headers values
func NewOperationsPurgeInternalServerError() *OperationsPurgeInternalServerError {
	return &OperationsPurgeInternalServerError{}
}

/*OperationsPurgeInternalServerError handles this case with default header values.

Server error
*/
type OperationsPurgeInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *OperationsPurgeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /rclone/operations/purge][%d] operationsPurgeInternalServerError  %+v", 500, o.Payload)
}

func (o *OperationsPurgeInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *OperationsPurgeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
