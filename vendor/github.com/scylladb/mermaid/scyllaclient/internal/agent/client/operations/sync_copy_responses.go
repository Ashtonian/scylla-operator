// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/mermaid/scyllaclient/internal/agent/models"
)

// SyncCopyReader is a Reader for the SyncCopy structure.
type SyncCopyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncCopyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncCopyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewSyncCopyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSyncCopyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSyncCopyOK creates a SyncCopyOK with default headers values
func NewSyncCopyOK() *SyncCopyOK {
	return &SyncCopyOK{}
}

/*SyncCopyOK handles this case with default header values.

Job ID
*/
type SyncCopyOK struct {
	Payload *models.Jobid
}

func (o *SyncCopyOK) Error() string {
	return fmt.Sprintf("[POST /rclone/sync/copy][%d] syncCopyOK  %+v", 200, o.Payload)
}

func (o *SyncCopyOK) GetPayload() *models.Jobid {
	return o.Payload
}

func (o *SyncCopyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Jobid)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncCopyNotFound creates a SyncCopyNotFound with default headers values
func NewSyncCopyNotFound() *SyncCopyNotFound {
	return &SyncCopyNotFound{}
}

/*SyncCopyNotFound handles this case with default header values.

Not found
*/
type SyncCopyNotFound struct {
	Payload *models.ErrorResponse
}

func (o *SyncCopyNotFound) Error() string {
	return fmt.Sprintf("[POST /rclone/sync/copy][%d] syncCopyNotFound  %+v", 404, o.Payload)
}

func (o *SyncCopyNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SyncCopyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncCopyInternalServerError creates a SyncCopyInternalServerError with default headers values
func NewSyncCopyInternalServerError() *SyncCopyInternalServerError {
	return &SyncCopyInternalServerError{}
}

/*SyncCopyInternalServerError handles this case with default header values.

Server error
*/
type SyncCopyInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SyncCopyInternalServerError) Error() string {
	return fmt.Sprintf("[POST /rclone/sync/copy][%d] syncCopyInternalServerError  %+v", 500, o.Payload)
}

func (o *SyncCopyInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *SyncCopyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*SyncCopyBody sync copy body
swagger:model SyncCopyBody
*/
type SyncCopyBody struct {

	// A remote name string eg. drive: for the destination
	DstFs string `json:"dstFs,omitempty"`

	// List of filename patterns to exclude from copy
	Exclude []string `json:"exclude"`

	// A remote name string eg. drive: for the source
	SrcFs string `json:"srcFs,omitempty"`
}

// Validate validates this sync copy body
func (o *SyncCopyBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *SyncCopyBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *SyncCopyBody) UnmarshalBinary(b []byte) error {
	var res SyncCopyBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
